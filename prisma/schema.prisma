datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Habit {
  id          String   @id @default(cuid())
  name        String
  colour      String
  userId      String
  days        String[]
  description String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  deleted   Boolean   @default(false)
  private   Boolean   @default(false)

  habits MarkedHabit[]
}

model MarkedHabit {
  id      String   @id @default(cuid())
  habitId String
  habit   Habit    @relation(fields: [habitId], references: [id])
  date    DateTime
  userId  String
  note    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserFriends {
  id           String @id @default(cuid())
  friendIdFrom String
  friendIdTo   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserFriendRequest {
  id                String @id @default(cuid())
  friendRequestFrom String
  friendRequestTo   String
  status            String //pending, declined, accepted

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FeatureFlag {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  badge       String?
  enabled     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  users UserFeatureFlag[]
}

model UserFeatureFlag {
  id        Int      @id @default(autoincrement())
  userId    String
  enabled   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  featureFlagId Int
  featureFlag   FeatureFlag @relation(fields: [featureFlagId], references: [id])
}
